Rcpp::sourceCpp("src/lossC.cpp")
devtools::document()
devtools::document()
Rcpp::sourceCpp("src/lossC.cpp")
devtools::document()
Rcpp::sourceCpp("src/lossC.cpp")
Rcpp::sourceCpp("src/lossC.cpp")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::build(vignettes=FALSE)
install.packages('/home/jinfulong/statistical compute/SA23204165_1.0.tar.gz',repo=NULL)
library(SA23204165)
library(MASS)
rho = 0.2
X <- mvrnorm(200,mu = rep(0,4), Sigma = diag(4) + rho*(1-diag(4)))
beta <- c(0.2,0.4,0.5,0.6)
g.index <- c(1,1,2,2)
p <- c(2,2)
y <- X%*%beta + rnorm(200)
fit <- glars(X,y,g.index,p)
library(SA23204165)
library(MASS)
rho = 0.2
X <- mvrnorm(200,mu = rep(0,4), Sigma = diag(4) + rho*(1-diag(4)))
beta <- c(0.2,0.4,0.5,0.6)
g.index <- c(1,1,2,2)
p <- c(2,2)
y <- X%*%beta + rnorm(200)
fit <- glars(X,y,g.index,p)
fit$betas
lossC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index), p)
criterion(fit$X, fit$y, sd(fit$y), betas, g.index, p)
criterion(fit$X, fit$y, sd(fit$y), fit$betas, g.index, p)
path(fit, xrange = c(0, 1), yrange = c(0, 1))
path(fit, xrange = c(0, 1), yrange = c(0, 1))
path(fit, xrange = c(0, 1), yrange = c(0, 1))
path(fit, xrange = c(0, 1), yrange = c(0, 1))
path(fit, xrange = c(0, 1), yrange = c(0, 1))
devtools::build(vignettes=FALSE)
install.packages('/home/jinfulong/statistical compute/SA23204165_1.0.tar.gz',repo=NULL)
library(MASS)
rho = 0.2
X <- mvrnorm(200,mu = rep(0,4), Sigma = diag(4) + rho*(1-diag(4)))
beta <- c(0.2,0.4,0.5,0.6)
g.index <- c(1,1,2,2)
p <- c(2,2)
y <- X%*%beta + rnorm(200)
fit <- glars(X,y,g.index,p)
fit$betas
lossC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index), p)
criterion(fit$X, fit$y, sd(fit$y), fit$betas, g.index, p)
devtools::build(vignettes=FALSE)
install.packages('/home/jinfulong/statistical compute/SA23204165_1.0.tar.gz',repo=NULL)
lossC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index), p)
criterion(fit$X, fit$y, sd(fit$y), fit$betas, g.index, p)
library(MASS)
rho = 0.2
X <- mvrnorm(200,mu = rep(0,6), Sigma = diag(6) + rho*(1-diag(6)))
beta <- c(0.2,0.4,0.5,0.6,0.3,0.5)
g.index <- c(1,1,2,2,3,3)
p <- c(2,2,2)
y <- X%*%beta + rnorm(200)
fit <- glars(X,y,g.index,p)
fit$betas
lossC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index), p)
criterion(fit$X, fit$y, sd(fit$y), fit$betas, g.index, p)
Rcpp::sourceCpp("src/lossC.cpp")
lossC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index), p)
criterion(fit$X, fit$y, sd(fit$y), fit$betas, g.index, p)
lossC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index), p)
lossC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index), p)
lossC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index), p)
lossC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index), p)
criterion(fit$X, fit$y, sd(fit$y), fit$betas, g.index, p)
SA23204165::criter
library(SA23204165)
devtools::document()
devtools::document()
devtools::check()
devtools::build()
install.packages('/home/jinfulong/statistical compute/SA23204165_1.0.tar.gz')
library(MASS)
rho = 0.2
X <- mvrnorm(200,mu = rep(0,4), Sigma = diag(4) + rho*(1-diag(4)))
beta <- c(0.2,0.4,0.5,0.6)
g.index <- c(1,1,2,2)
p <- c(2,2)
y <- X%*%beta + rnorm(200)
fit <- glars(X,y,g.index,p)
library(SA23204165)
library(MASS)
rho = 0.2
X <- mvrnorm(200,mu = rep(0,4), Sigma = diag(4) + rho*(1-diag(4)))
beta <- c(0.2,0.4,0.5,0.6)
g.index <- c(1,1,2,2)
p <- c(2,2)
y <- X%*%beta + rnorm(200)
fit <- glars(X,y,g.index,p)
fit$betas
criterion(fit$X, fit$y, fit$sigma, fit$betas, g.index, p)
criterion(fit$X, fit$y, sd(fit$y), fit$betas, g.index, p)
criterionC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index),p)
library(StatcompSA23204165)
detach("package:SA23204165", unload = TRUE)
remove.packages("StatcompSA23204165", lib="~/R/x86_64-pc-linux-gnu-library/4.3")
path(fit)
SA23204165::path(fit)
g.index = c(1,1,2,2)
table(g.index)
unnames(table(g.index))
unname(table(g.index))
g.index = c(1,1,2,2,2,3,3)
unname(table(g.index))
devtools::document()
devtools::build()
install.packages('/home/jinfulong/statistical compute/SA23204165_1.0.tar.gz')
devtools::build()
devtools::document()
devtools::build()
install.packages('/home/jinfulong/statistical compute/SA23204165_1.0.tar.gz')
devtools::build()
install.packages('/home/jinfulong/statistical compute/SA23204165_1.0.tar.gz')
library(SA23204165)
library(MASS)
rho = 0.2
X <- mvrnorm(200,mu = rep(0,10), Sigma = diag(10) + rho*(1-diag(10)))
beta <- c(0.2,0.4,0.5,0.6,0.6,0.6,0.2,0.3,0.5,0.7)
g.index <- c(1,1,1,2,2,2,3,3,4,5)
y <- X%*%beta + rnorm(200)
fit <- glars(X,y,g.index)
criterionC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index),unname(table(g.index)))
criterion(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unname(table(g.index)))
unname(table(g.index))
fit$K
fit$path
fit$betas
path(fit)
table(g.index)
a = unname(table(g.index))
a = c(unname(table(g.index)))
b = c(1,2,3)
devtools::build()
install.packages('/home/jinfulong/statistical compute/SA23204165_1.0.tar.gz')
library(SA23204165)
library(MASS)
rho = 0.2
X <- mvrnorm(200,mu = rep(0,10), Sigma = diag(10) + rho*(1-diag(10)))
beta <- c(0.2,0.4,0.5,0.6,0.6,0.6,0.2,0.3,0.5,0.7)
g.index <- c(1,1,1,2,2,2,3,3,4,5)
y <- X%*%beta + rnorm(200)
fit <- glars(X,y,g.index)
fit$betas
path(fit)
criterion(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unname(table(g.index)))
criterionC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index),unname(table(g.index)))
devtools::document()
devtools::build()
install.packages('/home/jinfulong/statistical compute/SA23204165_1.0.tar.gz')
library(SA23204165)
library(SA23204165)
library(MASS)
rho = 0.2
X <- mvrnorm(200,mu = rep(0,10), Sigma = diag(10) + rho*(1-diag(10)))
beta <- c(0.2,0.4,0.5,0.6,0.6,0.6,0.2,0.3,0.5,0.7)
g.index <- c(1,1,1,2,2,2,3,3,4,5)
y <- X%*%beta + rnorm(200)
fit <- glars(X,y,g.index)
fit$betas
path(fit)
criterion(fit$X, fit$y, sd(fit$y), fit$betas, g.index, c(unname(table(g.index))))
criterionC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index),c(unname(table(g.index))))
devtools::build()
library(SA23204165)
library(SA23204165)
library(MASS)
rho = 0.2
X <- mvrnorm(200,mu = rep(0,10), Sigma = diag(10) + rho*(1-diag(10)))
beta <- c(0.2,0.4,0.5,0.6,0.6,0.6,0.2,0.3,0.5,0.7)
g.index <- c(1,1,1,2,2,2,3,3,4,5)
y <- X%*%beta + rnorm(200)
fit <- glars(X,y,g.index)
criterionC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index),c(unname(table(g.index))))
criterion(fit$X, fit$y, sd(fit$y), fit$betas, g.index, c(unname(table(g.index))))
criterion(fit$X, fit$y, sd(fit$y), fit$betas, g.index, c(unname(table(g.index)))) + 2*colSums(fit$betas!=0)
criterionc(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index), c(unname(table(g.index)))) + 2*colSums(fit$betas!=0)
criterionC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index), c(unname(table(g.index)))) + 2*colSums(fit$betas!=0)
Rcpp::sourceCpp("src/criterionC.cpp")
devtools::build()
install.packages('/home/jinfulong/statistical compute/SA23204165_1.0.tar.gz')
library(SA23204165)
library(MASS)
rho = 0.2
X <- mvrnorm(200,mu = rep(0,10), Sigma = diag(10) + rho*(1-diag(10)))
beta <- c(0.2,0.4,0.5,0.6,0.6,0.6,0.2,0.3,0.5,0.7)
g.index <- c(1,1,1,2,2,2,3,3,4,5)
y <- X%*%beta + rnorm(200)
fit <- glars(X,y,g.index)
criterionC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index),c(unname(table(g.index))))
devtools::build()
install.packages('/home/jinfulong/statistical compute/SA23204165_1.0.tar.gz')
library(SA23204165)
library(MASS)
rho = 0.2
X <- mvrnorm(200,mu = rep(0,10), Sigma = diag(10) + rho*(1-diag(10)))
beta <- c(0.2,0.4,0.5,0.6,0.6,0.6,0.2,0.3,0.5,0.7)
g.index <- c(1,1,1,2,2,2,3,3,4,5)
y <- X%*%beta + rnorm(200)
fit <- glars(X,y,g.index)
criterionC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index),c(unname(table(g.index))))
library(SA23204165)
library(MASS)
rho = 0.2
X <- mvrnorm(200,mu = rep(0,10), Sigma = diag(10) + rho*(1-diag(10)))
beta <- c(0.2,0.4,0.5,0.6,0.6,0.6,0.2,0.3,0.5,0.7)
g.index <- c(1,1,1,2,2,2,3,3,4,5)
y <- X%*%beta + rnorm(200)
fit <- glars(X,y,g.index)
FIT
criterion(fit$X, fit$y, sd(fit$y), fit$betas, g.index, c(unname(table(g.index))))
path(fit, xrange = c(0, 1), yrange = c(0, 1))
criterionC(fit$X, fit$y, sd(fit$y), fit$betas, g.index, unique(g.index),c(unname(table(g.index))))
fit$betas
fit$X
devtools::build()
install.packages('/home/jinfulong/statistical compute/SA23204165_1.0.tar.gz')
devtools::build()
install.packages('/home/jinfulong/statistical compute/SA23204165_1.0.tar.gz')
devtools::build()
install.packages('/home/jinfulong/statistical compute/SA23204165_1.0.tar.gz')
